kind: Namespace
apiVersion: v1
metadata:
  name: {{ usernamespace }}
---
kind: StatefulSet
apiVersion: apps/v1beta1
metadata:
  name: mongos0
  namespace: {{ usernamespace }}
spec:
  serviceName: mongos0
  replicas: 1
  template:
    metadata:
      labels:
        app: mongos0
      annotations:
        io.daocloud.service.role: "maste"
        io.daocloud.compose.placement.constraints: "[\"node.labels.servicepool2 == servicepool2\"]"
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                    - mongos1
              topologyKey: "kubernetes.io/hostname"

      containers:
      - name: mongo-ha
        imagePullPolicy: IfNotPresent
        image: daocloud.io/daocloud/mongo-ha
        volumeMounts:
        - name: mongos0
          mountPath: "/data/db"
        args: ["--replSet rs0 --auth --keyFile /etc/mongo_key"]
        env:
        - name : replSet
          value: "rs0"
        - name : MONGODB_USER
          value: {{ username }}
        - name : MONGODB_PASS
          value: {{ password }}
        - name : MONGODB_DATABASE
          value: {{ database }}
        - name : STARTORDER
          value: "0"
      volumes:
      - name: mongos0
        persistentVolumeClaim:
          claimName: pvcs002
---
apiVersion: v1
kind: Service
metadata:
  name: mongos0
  namespace: {{ usernamespace }}
  labels:
    app: mongos0
spec:
  ports:
  - port: 27017
    name: mongos0
    protocol: TCP
    targetPort: 27017

  clusterIP: None
  selector:
    app: mongos0
---
kind: StatefulSet
apiVersion: apps/v1beta1
metadata:
  name: mongos1
  namespace: {{ usernamespace }}
spec:
  serviceName: mongos1
  replicas: 1
  template:
    metadata:
      labels:
        app: mongos1
      annotations:
        io.daocloud.service.role: "master"
        io.daocloud.compose.placement.constraints: "[\"node.labels.servicepool3 == servicepool3\"]"
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                    - mongop0
              topologyKey: "kubernetes.io/hostname"

      containers:
      - name: mongo-ha
        imagePullPolicy: IfNotPresent
        image: daocloud.io/daocloud/mongo-ha
        volumeMounts:
        - name: mongos1
          mountPath: "/data/db"
        args: ["--replSet rs0 --auth --keyFile /etc/mongo_key"]
        env:
        - name : replSet
          value: "rs0"
        - name : MONGODB_USER
          value: {{ username }}
        - name : MONGODB_PASS
          value: {{ password }}
        - name : MONGODB_DATABASE
          value: {{ database }}
        - name : STARTORDER
          value: "1"
      volumes:
      - name: mongos1
        persistentVolumeClaim:
          claimName: pvcs003
---
apiVersion: v1
kind: Service
metadata:
  name: mongos1
  namespace: {{ usernamespace }}
  labels:
    app: mongos1
spec:
  ports:
  - port: 27017
    name: mongos0
    protocol: TCP
    targetPort: 27017

  clusterIP: None
  selector:
    app: mongos1
---
kind: StatefulSet
apiVersion: apps/v1beta1
metadata:
  name: express
  namespace: {{ usernamespace }}
spec:
  serviceName: express
  replicas: 1
  template:
    metadata:
      labels:
        app: express
      annotations:
        io.daocloud.service.console: "true"
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                    - mongos
              topologyKey: "kubernetes.io/hostname"

      containers:
      - name: mongo-express
        imagePullPolicy: IfNotPresent
        image: daocloud.io/daocloud/mongo-express:rs
        env:
        - name : ME_CONFIG_MONGODB_SERVER
          value: "mongop0,mongos1,mongos0"
        - name : ME_CONFIG_MONGODB_ENABLE_ADMIN
          value: '''true'''
        - name : ME_CONFIG_MONGODB_ADMINUSERNAME
          value: {{ username }}
        - name : ME_CONFIG_MONGODB_ADMINPASSWORD
          value: {{ password }}
        - name : ME_CONFIG_MONGODB_AUTH_USERNAME
          value: {{ username }}
        - name : ME_CONFIG_MONGODB_AUTH_PASSWORD
          value: {{ password }}
        - name : ME_CONFIG_BASICAUTH_USERNAME
          value: {{ username }}
        - name : ME_CONFIG_BASICAUTH_PASSWORD
          value: {{ password }}
        - name : USERNAME
          value: {{ username }}
        - name : PASSWORD
          value: {{ password }}
        - name : STARTORDER
          value: "3"
        - name : ADDRESS
          value: "mongop0:27017,mongos1:27017,mongos0:27017"
---
apiVersion: v1
kind: Service
metadata:
  name: express
  namespace: {{ usernamespace }}
  labels:
    app: express
spec:
  ports:
  - port: 8081
    name: express
    protocol: TCP
    targetPort: 8081
    nodePort: 30002

  type: NodePort
  selector:
    app: express
---
kind: StatefulSet
apiVersion: apps/v1beta1
metadata:
  name: mongop0
  namespace: {{ usernamespace }}
spec:
  serviceName: mongop0
  replicas: 1
  template:
    metadata:
      labels:
        app: mongop0
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                    - mongos0
              topologyKey: "kubernetes.io/hostname"

      containers:
      - name: mongop0
        imagePullPolicy: IfNotPresent
        image: daocloud.io/daocloud/mongo-ha
        args: ["--replSet rs0 --auth --keyFile /etc/mongo_key"]
        volumeMounts:
        - name: mongop0
          mountPath: "/etc/mysql"
        env:
        - name : replSet
          value: "rs0"
        - name : MONGODB_USER
          value: {{ username }}
        - name : MONGODB_PASS
          value: {{ password }}
        - name : MONGODB_DATABASE
          value: {{ database }}
        - name : STARTORDER
          value: "2"
        - name: ADDRESS
          value: "mongos1:27017,mongos0:27017"
        - name: PRIMARY
          value: "1"
      volumes:
      - name: mongop0
        persistentVolumeClaim:
          claimName: pvcs001
---
apiVersion: v1
kind: Service
metadata:
  name: mongop0
  namespace: {{ usernamespace }}
  labels:
    app: mongop0
spec:
  ports:
  - port: 27017
    name: mongop0
    protocol: TCP
    targetPort: 27017

  clusterIP: None
  selector:
    app: mongop0
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: pvcs001
  namespace: {{ usernamespace }}
  annotations:
    volume.beta.kubernetes.io/storage-class: portworx
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: pvcs002
  namespace: {{ usernamespace }}
  annotations:
    volume.beta.kubernetes.io/storage-class: portworx
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: pvcs003
  namespace: {{ usernamespace }}
  annotations:
    volume.beta.kubernetes.io/storage-class: portworx
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
